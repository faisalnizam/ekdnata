---
- name: Add group "prometheus"
  group:
    name: prometheus
    system: yes
  register: group

- name: Add user "prometheus"
  user:
    shell: /sbin/nologin
    group: prometheus
    name: prometheus
    system: yes
  register: user

- name: "Creates node_exporter's directory"
  file:
    path: "{{node_exporter_path}}"
    group: prometheus
    owner: prometheus
    state: directory
  when: group|succeeded and user|succeeded

- name: download and untar node_exporter tarball
  unarchive:
    src: https://s3.ap-south-1.amazonaws.com/bootstrap.mansit.co.uk/prometheus/node_exporter-{{node_version}}.linux-amd64.tar.gz
    dest: "{{node_exporter_path}}"
    group: prometheus
    owner: prometheus
    copy: no
  register: unzipped

- name: create simple link from version to node_exporter
  file:
    src: "{{node_exporter_path}}/node_exporter-{{node_version}}.linux-amd64/node_exporter"
    dest: "{{node_exporter_path}}/node_exporter"
    state: link
    group: prometheus
    owner: prometheus
  when: not unzipped|skipped
  register: link

- name: copy systemd config to server
  template:
    src: "./node_exporter.service.j2"
    dest: "/lib/systemd/system/node_exporter.service"
    group: prometheus
    owner: prometheus
  when: ansible_service_mgr == "systemd"
  register: service_change

- name: go-daemon
  yum:
    name: https://github.com/fiorix/go-daemon/releases/download/v1.3/go-daemon-1.3-1.el6.x86_64.rpm
    state: present
  when: ansible_service_mgr == "upstart"

- name: copy init(upstart) config to server
  template:
    src: "./node_exporter.upstart.j2"
    dest: "/etc/rc.d/init.d/node_exporter"
    mode: 0755
  when: ansible_service_mgr == "upstart"
  register: service_change


- name: restart node_exporter prometheus (systemd)
  systemd:
    state: restarted
    daemon_reload: yes
    name: node_exporter
    enabled: yes
  when: ansible_service_mgr == "systemd" and ((service_change|success) or (link|success))

- name: restart node_exporter prometheus (service)
  service:
    name: node_exporter
    enabled: yes
    state: restarted
  when: ansible_service_mgr != "systemd" and ((service_change|success) or (link|success))
